class Solution {
public:

    void combination (int ind, vector<vector<int>> & ans, vector<int> &   candidates, int target , vector<int> & ds){
           
    
            if(target ==0){
                ans.push_back(ds);
            
            return;
            }
          for(int i=ind;i<candidates.size();i++){
            if(i>ind && candidates[i]==candidates[i-1]) continue;
            if(candidates[i]>target ) break;
            ds.push_back(candidates[i]);
            combination(i+1,ans,candidates,target-candidates[i],ds);
            ds.pop_back();
          
          }
     

    }
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
        
          vector<vector<int>> ans;

          vector<int> ds;
          
          sort(candidates.begin(),candidates.end());
          combination(0,ans,candidates,target,ds);
          
          return ans;
    }
};
